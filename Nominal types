Nominal types in TypeScript

https://www.typescriptlang.org/play#example/nominal-typing

https://github.com/Microsoft/TypeScript/issues/202



https://michalzalecki.com/nominal-typing-in-typescript/

https://dnlytras.com/blog/nominal-types/

declare const __nominal__type: unique symbol;
export type Nominal<Type, Identifier> = Type & {
  readonly [__nominal__type]: Identifier;
};

type UserId = Nominal<string, 'UserId'>;
type PostId = Nominal<string, 'PostId'>;
type OrgId = Nominal<string, 'OrgId'>;
type ProjectId = Nominal<string, 'ProjectId'>;

type CustomerId = Nominal<string, 'CustomerId'>;
type ClientId = Nominal<string, 'ClientId'>;

type projectInvitationToken = Nominal<string, 'projectInvitationToken'>;
type passwordResetToken = Nominal<string, 'passwordResetToken'>;

type EUR = Nominal<number, 'EUR'>;
type USD = Nominal<number, 'USD'>;

type Miles = Nominal<number, 'Miles'>;
type Kilometers = Nominal<number, 'Kilometers'>;


